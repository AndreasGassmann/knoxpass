name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: git fetch --no-tags --prune --depth=5 origin main
      - run: npm ci
      - run: npm run nx run-many -- --target=build --all
      - run: npm run nx run-many -- --target=lint --all
      - run: npm run nx run-many -- --target=test --all
      - run: npm run nx run-many -- --target=e2e --all

      - name: Upload screenshots
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: dist/cypress
      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload videos
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: dist/cypress
    
      - name: Upload built app
        uses: actions/upload-artifact@v1
        with:
          name: knoxpass-extension
          path: dist/apps/knoxpass-extension
  
  deploy_github_pages:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Prepare
        run: npm ci

      - name: Deploy Github Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run actions:deploy

  # android_build:
  #   needs: build_angular
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Setup environment
  #     - uses: actions/checkout@v2

  #     - name: Setup java
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.8

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12.x

  #     # Build app
  #     - name: Download built webapp
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: angular_dist
  #         path: www

  #     # Install dependencies
  #     - name: Install Capacitor
  #       run: npm install @capacitor/cli

  #     - name: Copy files to native project
  #       run: npx cap sync android

  #     - name: Clean android project
  #       run: android/gradlew --project-dir android clean

  #     - name: Build Android APK
  #       run: |
  #         android/gradlew assembleDebug --project-dir android build
  #         mv android/app/build/outputs/apk/debug/app-debug.apk invite-manager-app-dev.apk
  #     # Publish dev artifacts
  #     - name: Upload dev APK
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: app-dev
  #         path: invite-manager-app-dev.apk

  # ios_build:
  #   needs: build_angular
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: [macos-latest]
  #   env:
  #     XC_VERSION: ${{ '11.4' }}
  #     XC_WORKSPACE: ${{ 'ios/App/App.xcworkspace' }}
  #     XC_SCHEME: ${{ 'App' }}

  #   steps:
  #     # Setup environment
  #     - uses: actions/checkout@v2

  #     - name: Select latest Xcode
  #       run: 'sudo xcode-select -s /Applications/Xcode_$XC_VERSION.app'

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12.x

  #     - name: Download built webapp
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: angular_dist
  #         path: www

  #     # Install dependencies
  #     - name: Install Capacitor
  #       run: npm install @capacitor/cli

  #     - name: Copy files to native project
  #       run: npx cap sync ios
  #     # - name: Build
  #     #   run: /usr/bin/xcodebuild -workspace "$XC_WORKSPACE" -scheme "$XC_SCHEME" generic/platform=iOS -configuration Release archive -archivePath ios/InviteManager.xcarchive -allowProvisioningUpdates
