name: Nx Affected CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: git fetch --no-tags --prune --depth=5 origin main
      - run: npm ci
      - run: npm run nx run-many -- --target=build --all
      - run: npm run nx run-many -- --target=lint --all
      - run: npm run nx run-many -- --target=test --all
      - run: npm run nx run-many -- --target=e2e --all

      - name: Upload screenshots
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: dist/cypress
      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload videos
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: dist/cypress

  deploy_github_pages:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Prepare
        run: npm ci

      - name: Deploy Github Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run actions:deploy